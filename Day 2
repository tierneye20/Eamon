// Created on Mon March 23 2020
int l_motor=0;
int r_motor=2;
int l_bump=8;
int r_bump=9;
int rtop=6;
int ltop=5;

int main()
{
	while(analog(rtop)<500){
	veer1();//while top sees no line veer right
	printf("veer1\n");	
		}
	ao();	
	while (digital(r_bump)==0){
		forward();//keep going forward untill wall it hit
		}
	ao();
	back();//back up and turn towards line
	turn();
	while(analog(rtop)<500){//go forward till right sensor hits line
		printf("forward\n");
		forward();
		}
	ao();
	while(analog(ltop)<500){//turn back toward line until left sensor sees line
		printf("turn2\n");
		turn2();
		if(digital(l_bump)==1){//if left bumper hits wall stop
			break;
			}
		}
	ao();
	turn2();
	back();//back up and turn towards the horizontal black line
	turn3();
	while(analog(rtop)<500){
	forward();//drive forward till veritcal black line and stop
	}
	ao();
	msleep(1000);
	forward2();//move past vertical black line
	while(analog(rtop)<500){
	forward();//drive till horizontal black line an stop
	}
	ao();
	return 0;
}

void veer1(){
	motor(l_motor,100);
	motor(r_motor,70);
	}
void forward(){
	motor(l_motor,100);
	motor(r_motor,100);
	}
void back(){
	motor(l_motor,-100);
	motor(r_motor,-100);
	msleep(400);
	}
void turn(){
	motor(l_motor,-15);
	motor(r_motor,60);
	msleep(1250);
	}
void turn2(){
	motor(l_motor,100);
	motor(r_motor,85);
	}
void turn3(){
	motor(l_motor,0);
	motor(r_motor,90);
	msleep(1100);
	}
void back2(){
	motor(l_motor,-100);
	motor(r_motor,-100);
	msleep(1900);
	}
void forward2(){
	motor(l_motor,100);
	motor(r_motor,100);
	msleep(800);
	}
